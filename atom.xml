<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kychill1986.github.io</id>
    <title>K.Y.Chill&apos;s Blog</title>
    <updated>2020-06-19T07:00:13.968Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kychill1986.github.io"/>
    <link rel="self" href="https://kychill1986.github.io/atom.xml"/>
    <subtitle>生活，工作</subtitle>
    <logo>https://kychill1986.github.io/images/avatar.png</logo>
    <icon>https://kychill1986.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, K.Y.Chill&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[MyBatis 批量 upsert]]></title>
        <id>https://kychill1986.github.io/post/mybatis-pi-liang-upsert/</id>
        <link href="https://kychill1986.github.io/post/mybatis-pi-liang-upsert/">
        </link>
        <updated>2020-06-18T03:52:04.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka 为什么速度那么快？【转】]]></title>
        <id>https://kychill1986.github.io/post/kafka-wei-shi-me-su-du-na-me-kuai-zhuan/</id>
        <link href="https://kychill1986.github.io/post/kafka-wei-shi-me-su-du-na-me-kuai-zhuan/">
        </link>
        <updated>2020-06-11T02:48:10.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[RabbitMQ实现延迟消息【转】]]></title>
        <id>https://kychill1986.github.io/post/rabbitmq-shi-xian-yan-chi-xiao-xi-zhuan/</id>
        <link href="https://kychill1986.github.io/post/rabbitmq-shi-xian-yan-chi-xiao-xi-zhuan/">
        </link>
        <updated>2020-06-09T07:50:30.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[RabbitMQ基本使用【转】]]></title>
        <id>https://kychill1986.github.io/post/rabbitmq-ji-ben-shi-yong-zhuan/</id>
        <link href="https://kychill1986.github.io/post/rabbitmq-ji-ben-shi-yong-zhuan/">
        </link>
        <updated>2020-06-09T07:13:26.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm26slc6cj20ob0c0ac9.jpg" alt="undefined" loading="lazy"></figure>
<h1 id="配置">配置</h1>
<ul>
<li>
<p>访问RabbitMQ管理页面地址，查看是否安装成功（Linux下使用服务器IP访问即可）：http://localhost:15672/<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm292ow6nj20re08xaah.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>输入账号密码并登录，这里使用默认账号密码登录：guest guest</p>
</li>
<li>
<p>创建帐号并设置其角色为管理员：mall mall<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2awkgxyj20p30l9wfo.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>创建一个新的虚拟host为：/mall<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2b7iuz7j20u00dl41m.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>点击mall用户进入用户配置页面；<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2bb77jsj20ko0k9t9p.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>给mall用户配置该虚拟host的权限；<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2bmy7jej20mf0lc3zg.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>至此，RabbitMQ的配置完成。</p>
<h1 id="5种消息模式">5种消息模式</h1>
<blockquote>
<p>这5种消息模式是构建基于RabbitMQ的消息应用的基础，一定要牢牢掌握它们。学过RabbitMQ的朋友应该了解过这些消息模式的Java实现，这里我们使用Spring AMQP的形式来实现它们。</p>
</blockquote>
<h2 id="简单模式">简单模式</h2>
<blockquote>
<p>简单模式是最简单的消息模式，它包含一个生产者、一个消费者和一个队列。生产者向队列里发送消息，消费者从队列中获取消息并消费。</p>
</blockquote>
<h3 id="模式示意图">模式示意图</h3>
<figure data-type="image" tabindex="2"><img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2d0r3hsj20fn03374c.jpg" alt="undefined" loading="lazy"></figure>
<h3 id="spring-amqp实现">Spring AMQP实现</h3>
<ul>
<li>首先需要在pom.xml中添加Spring AMQP的相关依赖；</li>
</ul>
</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm26slc6cj20ob0c0ac9.jpg" alt="undefined" loading="lazy"></figure>
<h1 id="配置">配置</h1>
<ul>
<li>
<p>访问RabbitMQ管理页面地址，查看是否安装成功（Linux下使用服务器IP访问即可）：http://localhost:15672/<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm292ow6nj20re08xaah.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>输入账号密码并登录，这里使用默认账号密码登录：guest guest</p>
</li>
<li>
<p>创建帐号并设置其角色为管理员：mall mall<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2awkgxyj20p30l9wfo.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>创建一个新的虚拟host为：/mall<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2b7iuz7j20u00dl41m.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>点击mall用户进入用户配置页面；<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2bb77jsj20ko0k9t9p.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>给mall用户配置该虚拟host的权限；<br>
<img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2bmy7jej20mf0lc3zg.jpg" alt="undefined" loading="lazy"></p>
</li>
<li>
<p>至此，RabbitMQ的配置完成。</p>
<h1 id="5种消息模式">5种消息模式</h1>
<blockquote>
<p>这5种消息模式是构建基于RabbitMQ的消息应用的基础，一定要牢牢掌握它们。学过RabbitMQ的朋友应该了解过这些消息模式的Java实现，这里我们使用Spring AMQP的形式来实现它们。</p>
</blockquote>
<h2 id="简单模式">简单模式</h2>
<blockquote>
<p>简单模式是最简单的消息模式，它包含一个生产者、一个消费者和一个队列。生产者向队列里发送消息，消费者从队列中获取消息并消费。</p>
</blockquote>
<h3 id="模式示意图">模式示意图</h3>
<figure data-type="image" tabindex="2"><img src="http://ww1.sinaimg.cn/large/5f94f747ly1gfm2d0r3hsj20fn03374c.jpg" alt="undefined" loading="lazy"></figure>
<h3 id="spring-amqp实现">Spring AMQP实现</h3>
<ul>
<li>首先需要在pom.xml中添加Spring AMQP的相关依赖；</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ElasticSearch中composite聚合的使用【转】]]></title>
        <id>https://kychill1986.github.io/post/elasticsearch-zhong-composite-ju-he-de-shi-yong-zhuan/</id>
        <link href="https://kychill1986.github.io/post/elasticsearch-zhong-composite-ju-he-de-shi-yong-zhuan/">
        </link>
        <updated>2020-06-03T02:10:54.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 8 BiFunction 和 BiConsumer使用]]></title>
        <id>https://kychill1986.github.io/post/java-8-bifunction-he-biconsumer-shi-yong/</id>
        <link href="https://kychill1986.github.io/post/java-8-bifunction-he-biconsumer-shi-yong/">
        </link>
        <updated>2020-06-02T12:10:53.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Elasticsearch 聚合分页排序]]></title>
        <id>https://kychill1986.github.io/post/elasticsearch-ju-he-fen-ye-pai-xu/</id>
        <link href="https://kychill1986.github.io/post/elasticsearch-ju-he-fen-ye-pai-xu/">
        </link>
        <updated>2020-06-02T08:20:25.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[虚拟机内的ElasticSearch 7.6.0，可以在宿主机用IP进行访问(CentOS)]]></title>
        <id>https://kychill1986.github.io/post/xu-ni-ji-nei-de-elasticsearch-760ke-yi-zai-su-zhu-ji-yong-ip-jin-xing-fang-wen-centos/</id>
        <link href="https://kychill1986.github.io/post/xu-ni-ji-nei-de-elasticsearch-760ke-yi-zai-su-zhu-ji-yong-ip-jin-xing-fang-wen-centos/">
        </link>
        <updated>2020-05-28T07:30:53.000Z</updated>
        <summary type="html"><![CDATA[<p>🖥   ElasticSearch 对外可访问配置</p>
]]></summary>
        <content type="html"><![CDATA[<p>🖥   ElasticSearch 对外可访问配置</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac 系统安装ElasticSearch]]></title>
        <id>https://kychill1986.github.io/post/mac-xi-tong-an-zhuang-elasticsearch/</id>
        <link href="https://kychill1986.github.io/post/mac-xi-tong-an-zhuang-elasticsearch/">
        </link>
        <updated>2020-03-11T06:45:42.000Z</updated>
        <summary type="html"><![CDATA[<p>🖥  包含单机安装，以及集群配置介绍...</p>
]]></summary>
        <content type="html"><![CDATA[<p>🖥  包含单机安装，以及集群配置介绍...</p>
]]></content>
    </entry>
</feed>